-- Create User table
CREATE TABLE User (
    user_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    email VARCHAR(255) NOT NULL UNIQUE,
    google_id VARCHAR(255) NOT NULL UNIQUE,
    is_admin BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create League table
CREATE TABLE League (
    league_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    creator_id CHAR(36) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (creator_id) REFERENCES User(user_id)
);

-- Create Team table
CREATE TABLE Team (
    team_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    name VARCHAR(255) NOT NULL,
    conference ENUM('Eastern', 'Western') NOT NULL,
    seed INTEGER DEFAULT NULL,
    logo_url VARCHAR(255),
    is_in_playoff BOOLEAN DEFAULT FALSE,
    INDEX idx_name (name)
);

-- Create Player table
CREATE TABLE Player (
    player_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    user_id CHAR(36) NOT NULL,
    league_id CHAR(36) NOT NULL,
    name VARCHAR(255) NOT NULL,
    winning_team_id CHAR(36) NOT NULL,
    points INTEGER DEFAULT 0,
    mvp_prediction VARCHAR(255) NOT NULL,
    is_commissioner BOOLEAN NOT NULL,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES User(user_id),
    FOREIGN KEY (league_id) REFERENCES League(league_id),
    FOREIGN KEY (winning_team_id) REFERENCES Team(team_id),
    INDEX idx_user (user_id),
    INDEX idx_league (league_id),
    INDEX idx_winning_team (winning_team_id)
);

-- Create Match table
CREATE TABLE Matchup (
    matchup_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    home_team_id CHAR(36) NOT NULL,
    away_team_id CHAR(36) NOT NULL,
    status ENUM('upcoming', 'in_progress', 'completed') DEFAULT 'upcoming',
    home_team_score INTEGER DEFAULT 0,
    away_team_score INTEGER DEFAULT 0,
    round ENUM('playin_first', 'playin_second', first', 'second', 'conference_final', final) NOT NULL,
    conference ENUM('Eastern', 'Western') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (home_team_id) REFERENCES Team(team_id),
    FOREIGN KEY (away_team_id) REFERENCES Team(team_id),
    INDEX idx_teams (home_team_id, away_team_id),
    INDEX idx_round (round),
    INDEX idx_status (status)
);

-- Create Prediction table
CREATE TABLE Prediction (
    prediction_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    player_id CHAR(36) NOT NULL,
    matchup_id CHAR(36) NOT NULL,
    home_team_score INTEGER NOT NULL,
    away_team_score INTEGER NOT NULL,
    is_correct BOOLEAN DEFAULT NULL,
    points_earned INTEGER DEFAULT 0,
    predicted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (player_id) REFERENCES Player(player_id),
    FOREIGN KEY (matchup_id) REFERENCES Matchup(matchup_id),
    INDEX idx_player (player_id),
    INDEX idx_matchup (matchup_id)
);

-- Create FixedPrediction table
CREATE TABLE FixedPrediction (
    fixed_prediction_id CHAR(36) PRIMARY KEY DEFAULT (UUID()),
    player_id CHAR(36) NOT NULL,
    home_team_id CHAR(36) NOT NULL,
    away_team_id CHAR(36) NOT NULL,
    home_team_score INTEGER NOT NULL,
    away_team_score INTEGER NOT NULL,
    round ENUM('playin_first', 'playin_second', first', 'second', 'conference_final', final) NOT NULL,
    conference ENUM('Eastern', 'Western') NOT NULL,
    is_correct BOOLEAN DEFAULT NULL,
    points_earned INTEGER DEFAULT 0,
    predicted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (player_id) REFERENCES Player(player_id),
    FOREIGN KEY (home_team_id) REFERENCES Team(team_id),
    FOREIGN KEY (away_team_id) REFERENCES Team(team_id),
    INDEX idx_player (player_id),
    INDEX idx_home_team (home_team_id),
    INDEX idx_away_team (away_team_id),
    INDEX idx_round (round),
    INDEX idx_matchup (home_team_id, away_team_id)
);